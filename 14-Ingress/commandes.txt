###STEPS###
# Create Controller
# Create Deployment
# Create Service
# Create DNS Cname Record for LB
# Create Ingress
# Test

# Create controller
ubuntu@ip-172-31-35-137:~$  kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/aws/deploy.yaml
ubuntu@ip-172-31-35-137:~$ kubectl get ns
ubuntu@ip-172-31-35-137:~$  kubectl get all -n ingress-nginx
#ubuntu@ip-172-31-35-137:~$  cd vprofile
#ubuntu@ip-172-31-35-137:~$  ls

# Create Deployment
ubuntu@ip-172-31-35-137:~$  vim vprodep.yaml

============================================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
spec:
  selector:
    matchLabels:
      run: my-app
  replicas: 1
  template:
    metadata:
      labels:
        run: my-app
    spec:
      containers:
      - name: my-app
        image: etixi/vproappfix
        ports:
        - containerPort: 8080
=============================================================================

ubuntu@ip-172-31-35-137:~$  kubectl apply -f vprodep.yaml


# Create service
ubuntu@ip-172-31-35-137:~$  vim vprosvc.yaml

============================================================================
apiVersion: v1
kind: Service
metadata:
  name: my-app
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: my-app
  type: ClusterIP
===============================================================================

ubuntu@ip-172-31-35-137:~$  kubectl apply -f vprosvc.yaml
ubuntu@ip-172-31-35-137:~$  kubectl get svc
ubuntu@ip-172-31-35-137:~$  kubectl describe svc my-app


# Create DNS Cname Record for LB
Go to your domain hosted records
Add CNAME record
hostname => Load balancer Endpoint URL


# Create Ingress
ubuntu@ip-172-31-35-137:~$  vim vproingress.yaml

===============================================================================
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vpro-ingress
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: vprofile.info-hk.xyz
    http:
      paths:
      - path: /login
        pathType: Prefix
        backend:
          service:
            name: my-app
            port:
              number: 8080
============================================================================


ubuntu@ip-172-31-35-137:~$  kubectl apply -f vproingress.yaml
ubuntu@ip-172-31-35-137:~$ # Contoller
ubuntu@ip-172-31-35-137:~$ # Deployment
ubuntu@ip-172-31-35-137:~$ # CReadted DNS Cname Record for LB
ubuntu@ip-172-31-35-137:~$ # Create Ingress


# Update Path in ingress from /login to /
ubuntu@ip-172-31-35-137:~$  kubectl get ingress
ubuntu@ip-172-31-35-137:~$  kubectl delete ingress vpro-ingress


ubuntu@ip-172-31-35-137:~$  vim vproingress.yaml
===============================================
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vpro-ingress
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: vprofile.info-hk.xyz
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-app
            port:
              number: 8080

===================================================

ubuntu@ip-172-31-35-137:~$  kubectl apply -f vproingress.yaml
ubuntu@ip-172-31-35-137:~$  kubectl get ns
ubuntu@ip-172-31-35-137:~$  kubectl delete ns ingress-nginx
ubuntu@ip-172-31-35-137:~$  kubectl delete -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/aws/deploy.yaml